name: CI

on:
  workflow_call:
    inputs:
      build-ref:
        required: true
        type: string
  workflow_dispatch:
  push:

env:
  DOTNET_NOLOGO: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_GENERATE_ASPNET_CERTIFICATE: false

jobs:
  build:
    runs-on: ubuntu-22.04
    permissions:
      contents: read
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 # avoid shallow clone so nbgv can do its work.
        lfs: true
    - uses: dotnet/nbgv@v0.4
      id: nbgv
    - run: dotnet restore /p:ContinuousIntegrationBuild=true
    - run: dotnet build -c Release --no-restore /p:ContinuousIntegrationBuild=true
    - run: >-
        dotnet test
        -c Release --no-restore --no-build
        -s CodeCoverage.runsettings
        --logger "trx;LogFileName=test-results-${{ steps.nbgv.outputs.Version }}.trx"
        --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=cobertura
    - uses: actions/upload-artifact@v4
      if: success() || failure()
      with:
        name: test-results
        path: |
          **/*.trx
          **/coverage.cobertura.xml
    - name: ReportGenerator
      uses: danielpalme/ReportGenerator-GitHub-Action@5
      with:
        reports: "**/coverage.cobertura.xml"
        targetdir: coveragereport
    - uses: actions/upload-artifact@v4
      with:
        name: CoverageReport-${{ steps.nbgv.outputs.Version }}
        path: coveragereport
    - run: dotnet pack -c Release --no-restore --no-build /p:ContinuousIntegrationBuild=true
    - uses: actions/upload-artifact@v4
      with:
        name: nupkg
        path: bin/Packages/Release/**/*
